# Releases a new minor version every time a PR is merged into `master`.
#
# It also generates the `dist` folder inside the tag's commit, keeping
#   the `master` branch clean.
#
# It will also update the major tag v2 to track the latest tag.

name: Release new version

on:
  workflow_dispatch:
  push:
    branches:
      - master

env:
  major_version: 2

jobs:
  new-release:
    name: Create new release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.released.outputs.tag }}
    permissions:
      contents: write
    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: master

      - uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
        with:
          node-version: '20'

      - name: List existing tags
        run: |
          : List existing tags
          .github/workflows/find-tags.sh > ../tags.old
          mv .github/workflows/find-*tag*.sh ..

      - name: Run `npm install`
        run: npm install
        working-directory: node-action

      - name: Run `npm run build`
        run: npm run build
        working-directory: node-action

      - name: Suppress push
        run: |
          : Suppress push
          git fetch --tags --prune-tags --prune || true
          git remote rename origin upstream
          git remote add origin .

      - name: Release new version
        uses: int128/release-typescript-action@bda6cf3f777afe2f8329cbaa57b4ebd95622a9f4 # v1.31.0
        with:
          major-version: ${{ env.major_version }}

      - name: Find released version
        id: released
        # int128/release-typescript-action has no outputs!
        run: |
          : Find released version
          set -x
          tags=$(mktemp)
          ../find-tags.sh > ../tags.new
          ../find-major-tag.sh ../tags.old > ../major.old
          ../find-major-tag.sh ../tags.new > ../major.new
          grep . ../*tags* || true
          if ! diff -q ../major.old ../major.new > /dev/null; then
            major_tags=$(mktemp)
            diff -y ../major.old ../major.new | perl -ne 'next unless s<.*\|.*refs/tags/><>;print'
            ../find-minor-tags.sh ../tags.old > ../minor.old
            ../find-minor-tags.sh ../tags.new > ../minor.new
            grep minor ../* || true
            diff -U0 ../minor.old ../minor.new | perl -ne 'next unless s<^\+[0-9a-f]{40}\s+refs/tags/><>; print' > "$tags"
            if [ $(grep -c . "$tags" ) = 1 ]; then
              echo "tag=$(cat "$tags")" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Release
        if: ${{ steps.released.outputs.tag }}
        env:
          major: v${{ env.major_version }}
          minor: ${{ steps.released.outputs.tag }}

        run: |
          : Release
          git push upstream "$major" "$minor" --force-with-lease

  update-docs:
    name: Update documentation
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    needs:
      - new-release
    permissions:
      contents: write
    steps:
      - name: Checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: master

      - name: Update composite action
        if: ${{ needs.new-release.outputs.version }}
        env:
          version: ${{ needs.new-release.outputs.version }}
        run: |
          : Update composite action
          git config user.name github-actions
          git config user.email 'github-actions@github.com'
          if ! git diff --quiet; then
            git add -u
            git commit -m '(Unexpected changes) [skip ci]'
          fi
          .github/workflows/update-action.pl
          if ! git diff --quiet; then
            git add action.yml
            git commit -m "Update action to use $version [skip ci]"
          fi

      - name: Run `npm install`
        run: npm install
        working-directory: node-action

      - name: Run `npm run docs`
        run: |
          git mv ../README.md .
          npm run docs
          git mv README.md ..
        working-directory: node-action

      - name: Commit changes by `npm run docs`
        uses: alejandrohdezma/actions/commit-and-push@v1
        with:
          message: Run `npm run docs` [skip ci]
          branch: master

      - name: Push action update
        run: |
          git push origin HEAD || true
